# これはGitHub Actionsを使い始めるための基本的なワークフローです

name: Deploy to Alibaba Cloud ECI

# ワークフローが実行されるタイミングを制御
on:
  # "main"ブランチへのプッシュリクエスト時にワークフローをトリガー
  push:
    branches: [ "main" ]
    
  # Actionsタブから手動でこのワークフローを実行できるようにする
# workflow_dispatch:
# ワークフローの実行は、1つ以上のジョブで構成され、順次または並行して実行可能
jobs:
  # このワークフローには "build-and-push" というジョブが含まれる
  build-and-push:
    # ジョブが実行されるランナーのOS
    runs-on: ubuntu-latest　
    outputs:
    # ビルドしたイメージのタグを後続のジョブに渡す
      IMAGE_TAG: ${{ steps.set-image-tag.outputs.IMAGE_TAG }}　
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4　# リポジトリのコードを取得

      - name: Set Image Tag
        id: set-image-tag
        run: |
          # GitのコミットIDと現在時刻を組み合わせてタグを作成
          IMAGE_TAG=$(git rev-parse --short HEAD)-$(date +%Y%m%d%H%M%S　
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV　　　# 環境変数として設定
          echo "::set-output name=IMAGE_TAG::$IMAGE_TAG"　# 後続のジョブで使うための出力として設定

      - name: Log in to Alibaba Cloud Container Registry
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login --username=${{ secrets.ACR_USERNAME }} --password-stdin ${{ secrets.ACR_REGISTRY }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=${{ secrets.ACR_REGISTRY }}:${{ env.IMAGE_TAG }}　# Docker イメージの名前を設定
          docker build -t "$IMAGE_NAME" .　　　 # イメージをビルド
          docker push "$IMAGE_NAME"　　 # Alibaba Cloud Container Registry にプッシュ
          
  deploy-to-eci:
    needs: build-and-push
    runs-on: ubuntu-latest　　
    env:
      IMAGE_TAG: ${{ needs.build-and-push.outputs.IMAGE_TAG }}　# 先ほどのビルドジョブからイメージタグを取得
    steps:
      - name: Install Alibaba Cloud CLI
        run: |
          curl -L https://aliyuncli.alicdn.com/aliyun-cli-linux-latest-amd64.tgz | tar -xz
          sudo mv aliyun /usr/local/bin/

      - name: Configure Alibaba Cloud CLI
        run: |
          aliyun configure set --access-key-id ${{ secrets.ACCESS_KEY_ID }} \
                              --access-key-secret ${{ secrets.ACCESS_KEY_SECRET }} \
                              --region ap-northeast-1

      - name: Deploy to Alibaba Cloud ECI
        run: |
          # ポート設定（TCPの80番ポート）
          PORTS=$(jq -c -n '[{"Protocol":"TCP","Port":80}]')　　
    
          aliyun eci CreateContainerGroup \
            --RegionId ap-northeast-1 \
            --ContainerGroupName container-group-mycontainer \
            --Container.1.Image ${{ secrets.ACR_REGISTRY }}:${{ env.IMAGE_TAG }} \
            --Container.1.Name my-app-container \
            --Container.1.Cpu 1 \
            --Container.1.Memory 2 \
            --VSwitchId ${{ secrets.VSWITCH_ID }} \
            --SecurityGroupId ${{ secrets.SECURITY_GROUP_ID }} \
            --Container.1.Port "$PORTS"
